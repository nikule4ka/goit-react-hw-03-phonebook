{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","hanldeChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","form","type","onChange","placeholder","required","btnForm","Component","ContactList","contacts","onDeleteContacts","length","map","id","ContactList__item","ContactList__text","ContactList__btn","onClick","Filter","htmlFor","filter__label","defaultProps","App","filter","deleteContact","contactid","prevState","contact","addContacts","shortid","generate","existContact","find","newContact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","trim","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e277a3d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactList__item\":\"ContactList_ContactList__item__2ZVsZ\",\"ContactList__btn\":\"ContactList_ContactList__btn__2sZgO\"};","import React, { Component } from 'react';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  hanldeChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.hanldeChange}\n            placeholder=\"Name...\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"phone\"\n            name=\"number\"\n            value={number}\n            onChange={this.hanldeChange}\n            placeholder=\"Phone...\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.btnForm}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.ContactList}>\n    {contacts.length ? (\n      contacts.map(({ id, name, number }) => (\n        <li key={id} id={id} className={s.ContactList__item}>\n          <p className={s.ContactList__text}>{name}:</p>\n          <p className={s.ContactList__text}>{number}</p>\n\n          <button\n            className={s.ContactList__btn}\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))\n    ) : (\n      <p>No contacts found</p>\n    )}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label htmlFor=\"\" className={s.filter__label}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChange}\n      required\n    />\n  </label>\n);\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContact = contactid => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactid),\n    }));\n  };\n\n  addContacts = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const existContact = this.state.contacts.find(\n      newContact => newContact.name === contact.name,\n    );\n\n    if (existContact) {\n      return alert(`${existContact.name} is already in contacts`);\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    if (!filter.trim()) {\n      return contacts;\n    }\n    return contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContacts={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btnForm\":\"ContactForm_btnForm__RrRV0\"};"],"sourceRoot":""}